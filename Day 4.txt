                                           SDE SHEET STRIVER


                                                 DAY 4


1.Two Sum Problem

ANS. 1st approach (Brute force O(n2))  :

     vector<int> twoSum(vector<int>& nums, int target) {
        vector<int> res;
        for (int i=0;i<nums.size();i++)
        {
            for (int j=i+1;j<nums.size();j++)
            {
                if (nums[i]+nums[j]==target)
                {
                    res.push_back(i);
                    res.push_back(j);
                    break;
                }
            }
        }
        
        return res;
    }

    2nd approach (using map):

     vector<int> twoSum(vector<int>& nums, int target) {
        vector<int> res;
        map<int,int>  m;
        for (int i=0;i<nums.size();i++)
        {
            if (m.find(target-nums[i])==m.end())
            {
                m[nums[i]]=i;
            }
            else
            {
                res.push_back(m[target-nums[i]]);
                res.push_back(i);
                return res;
            }
        }
         return res; 
    }

2. 4 Sum problem 

ANS.   1st approach ():
